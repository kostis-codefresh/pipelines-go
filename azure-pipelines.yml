# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self


variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '762fbb4c-71cb-4f19-b1f9-c796885e450f'
  imageRepository: 'kostiscodefreshpipelinesgo'
  containerRegistry: 'kostisazureregistry.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'kostisazureregistry5bc1-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:

- stage: WithContainers
  displayName: Run my containers
  jobs:
  - job: RunInContainer
    pool:
      vmImage: 'ubuntu-16.04'
    container: golang:latest
    steps:
    - script: go test
    - script: ls
  - job: RunInContainer2
    pool:
      vmImage: 'ubuntu-16.04'
    container: golang:latest
    steps:
    - script: ls 
    - script: touch lala.txt 
    - script: ls 


- stage: Build
  displayName: Build stage
  dependsOn: WithContainers
  jobs:
     
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

- stage: Parallel_containers
  displayName: Run my containers in parallel 
  dependsOn: WithContainers
  jobs:
  - job: RunInContainer
    pool:
      vmImage: 'ubuntu-16.04'
    container: golang:latest
    steps:
    - script: go test
    - script: ls
  - job: RunInContainer2
    pool:
      vmImage: 'ubuntu-16.04'
    container: golang:latest
    steps:
    - script: ls      

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'kostiscodefreshpipelinesgo.from-azure-devops'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

 